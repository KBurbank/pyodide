---
title: "Python Interactive Code Cells"
subtitle: "Demos showing interactive use cases of Python in Your Quarto Documents"
author: "James Balamuta"
date: "08-08-2023"
format: html
filters:
- pyodide
---

Welcome to the world of interactive code cells, unlocked by the `quarto-pyodide` extension. 
These cells allow you to run Python code directly within your Quarto HTML documents, enabling real-time computations and more. Let's explore the impressive capabilities `pyodide` offers.

pyodide-enabled code cell are established by using `{pyodide-python}` in a Quarto HTML document.

# Creating pyodide-Enabled Code Cells

To create a pyodide-enabled code cell, simply use the `{pyodide-python}` tag in your Quarto HTML document, like this:

```{pyodide-python}
1 + 1
```

For example, the code cell above, powered by `pyodide`, was generated by entering the following into the Quarto document:

```{{pyodide-python}}
1 + 1
```

# Sample Use Cases

Now, let's delve into some practical scenarios where interactive code cells shine.

## Sample Calculations

Let's start off with a quick calculation 

```{pyodide-python}
1 + 1
```

## Strings

Viewing string data

```{pyodide-python}
greet = 'Hello'
greet
```

## Retrieving prior objects

Checking string length

```{pyodide-python}
len(greet)
```

Notice, we're able to track the run value of code.

## Define and Call Functions

Functions can be defined in one cell and called. 

```{pyodide-python}
def square(x):
    return x**2

square(8)
```

Similarly, they persist to other cells.

```{pyodide-python}
num_list = [1, 2, 3]
[square(num)for num in num_list]
```

## Load a package

We've enabled _dynamic_ package detection to handle importing packages into the environment. The _dynamic_ part comes from detecting whether a non-core Python package is used, installing, and, then, importing it.

:::{.callout-note}
Importing a package for the first time will require more time. Subsequent import statements will be resolve quicker.
:::

```{pyodide-python}
import pandas as pd

df = pd.DataFrame({
  'Name': ['JJB', 'H', 'Alex', 'Steve'],
  'Age': [18, 25, 33, 42]
})

df
```

```{pyodide-python}
import pandas as pd 

df.Age
```

## Graphing

:::{.callout-important}
Graphing is not yet available.
:::